// <auto-generated />
using System;
using MessengerAPI.Infrastructure.Common.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MessengerAPI.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("MessengerAPI.Domain.Common.Entities.FileData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Size")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("FileData");
                });

            modelBuilder.Entity("MessengerAPI.Domain.User.Entities.ProfilePhoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("FileId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FileId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("ProfilePhoto");
                });

            modelBuilder.Entity("MessengerAPI.Domain.User.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Bio")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("GlobalName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Key")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PasswordUpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("TerminateSessions")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("TwoFactorAuthentication")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UsernameUpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MessengerAPI.Domain.User.Entities.ProfilePhoto", b =>
                {
                    b.HasOne("MessengerAPI.Domain.Common.Entities.FileData", "File")
                        .WithOne()
                        .HasForeignKey("MessengerAPI.Domain.User.Entities.ProfilePhoto", "FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MessengerAPI.Domain.User.User", null)
                        .WithMany("ProfilePhotos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("File");
                });

            modelBuilder.Entity("MessengerAPI.Domain.User.User", b =>
                {
                    b.OwnsMany("MessengerAPI.Domain.User.ValueObjects.Email", "Emails", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<DateTime>("AddedAt")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Data")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<bool>("IsPublic")
                                .HasColumnType("INTEGER");

                            b1.Property<bool>("IsVerified")
                                .HasColumnType("INTEGER");

                            b1.Property<Guid>("UserId")
                                .HasColumnType("TEXT");

                            b1.HasKey("Id");

                            b1.HasIndex("Data")
                                .IsUnique();

                            b1.HasIndex("UserId");

                            b1.ToTable("Email");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsMany("MessengerAPI.Domain.User.ValueObjects.Phone", "Phones", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<DateTime>("AddedAt")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Data")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<bool>("IsVerified")
                                .HasColumnType("INTEGER");

                            b1.Property<Guid>("UserId")
                                .HasColumnType("TEXT");

                            b1.HasKey("Id");

                            b1.HasIndex("Data")
                                .IsUnique();

                            b1.HasIndex("UserId");

                            b1.ToTable("Phone");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("Emails");

                    b.Navigation("Phones");
                });

            modelBuilder.Entity("MessengerAPI.Domain.User.User", b =>
                {
                    b.Navigation("ProfilePhotos");
                });
#pragma warning restore 612, 618
        }
    }
}
